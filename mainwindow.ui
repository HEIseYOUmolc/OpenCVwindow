<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>mainwindow</class>
 <widget class="QMainWindow" name="mainwindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1300</width>
    <height>900</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>无人机喷洒上位机</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QStatusBar {
    background-color: #4CAF50;
    color: #FFFFFF;
}
</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QPlainTextEdit" name="recvEdit">
    <property name="enabled">
     <bool>true</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>10</x>
      <y>10</y>
      <width>251</width>
      <height>301</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Arial</family>
      <pointsize>-1</pointsize>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="mouseTracking">
     <bool>false</bool>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置QPlainTextEdit的样式 */
QPlainTextEdit {
    font: 16px &quot;Arial&quot;; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    background-repeat: repeat; /* 设置背景图像重复 */
    border: 2px solid #6b8e23; /* 设置边框样式和颜色 */
    border-radius: 8px; /* 设置边框的圆角 */
    padding: 2px; /* 设置内边距 */
}
</string>
    </property>
    <property name="readOnly">
     <bool>true</bool>
    </property>
    <property name="cursorWidth">
     <number>1</number>
    </property>
   </widget>
   <widget class="QTextEdit" name="sendEdit">
    <property name="geometry">
     <rect>
      <x>280</x>
      <y>10</y>
      <width>251</width>
      <height>301</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置QPlainTextEdit的样式 */
QTextEdit {
    font: 16px &quot;Arial&quot;; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    background-repeat: repeat; /* 设置背景图像重复 */
    border: 2px solid #6b8e23; /* 设置边框样式和颜色 */
    border-radius: 8px; /* 设置边框的圆角 */
    padding: 2px; /* 设置内边距 */
}
</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_origin">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>380</y>
      <width>640</width>
      <height>480</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置QLabel的样式 */
QLabel {
    font: bold 12px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    padding: 5px; /* 设置内边距 */
    background-color: #f5f5f5; /* 设置背景颜色 */
    border: 2px solid #8fbc8f; /* 设置边框样式和颜色 */
    border-radius: 10px; /* 设置边框的圆角 */
}
</string>
    </property>
    <property name="text">
     <string>原始图</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_inference">
    <property name="geometry">
     <rect>
      <x>660</x>
      <y>380</y>
      <width>640</width>
      <height>480</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置QLabel的样式 */
QLabel {
    font: bold 12px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    padding: 5px; /* 设置内边距 */
    background-color: #f5f5f5; /* 设置背景颜色 */
    border: 2px solid #8fbc8f; /* 设置边框样式和颜色 */
    border-radius: 10px; /* 设置边框的圆角 */
}
</string>
    </property>
    <property name="text">
     <string>推断图</string>
    </property>
   </widget>
   <widget class="QPushButton" name="origin">
    <property name="geometry">
     <rect>
      <x>250</x>
      <y>330</y>
      <width>121</width>
      <height>51</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
      <italic>false</italic>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
    background-color: #20b2aa;
    border: 2px solid #0f716b;
    border-radius: 8px;
    color: white;
    font: bold 14px;
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #5ac6be;
}

QPushButton:pressed {
    background-color: #0f716b;
}
</string>
    </property>
    <property name="text">
     <string>原始播放源</string>
    </property>
   </widget>
   <widget class="QPushButton" name="inference">
    <property name="geometry">
     <rect>
      <x>900</x>
      <y>330</y>
      <width>131</width>
      <height>51</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
      <italic>false</italic>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置橙色按钮 */
QPushButton {
    background-color: #ff9800; /* 橙色按钮颜色 */
    border: 2px solid #ffa726; /* 设置边框样式 */
    border-radius: 8px; /* 设置边框圆角 */
    color: white; /* 设置按钮文本颜色 */
    font: bold 14px; /* 设置按钮字体样式 */
    padding: 8px 16px; /* 设置按钮内边距 */
}

/* 设置橙色按钮的悬停状态 */
QPushButton:hover {
    background-color: #ffa726; /* 设置鼠标悬停时的橙色背景颜色 */
}

/* 设置橙色按钮的按下状态 */
QPushButton:pressed {
    background-color: #ff9800; /* 设置按钮按下时的橙色背景颜色 */
    border: 2px solid #ff5722; /* 设置按下时的边框样式 */
}
您可以将以上样式表代码应用到您的Qt按钮所在的窗口或父控件中。请注意，此处的颜色值使用的是十六进制表示法。您可以根据需要修改颜色值，或使用RGB表示法来设置您偏好的颜色。

这个样式表将为您的按钮设置淡绿色背景，橙色的默认样式和鼠标悬停样式，以及当按钮被按下时的样式。您可以根据您的需求进行进一步调整和微调，以创建符合您农业相关主题的美观按钮效果。






Regenerate
</string>
    </property>
    <property name="text">
     <string>检测播放源</string>
    </property>
   </widget>
   <widget class="QGroupBox" name="groupBox">
    <property name="geometry">
     <rect>
      <x>1030</x>
      <y>0</y>
      <width>261</width>
      <height>261</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"/>
    </property>
    <layout class="QGridLayout" name="gridLayout_3">
     <property name="sizeConstraint">
      <enum>QLayout::SetDefaultConstraint</enum>
     </property>
     <item row="5" column="1">
      <widget class="QPushButton" name="load_record">
       <property name="styleSheet">
        <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #4682b4; /* 钢蓝色背景色 */
    border: 2px solid #2c5680; /* 钢蓝色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
       </property>
       <property name="text">
        <string>加载桌面源</string>
       </property>
      </widget>
     </item>
     <item row="3" column="1">
      <widget class="QCheckBox" name="chkInfFPS">
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
         <italic>false</italic>
         <bold>true</bold>
        </font>
       </property>
       <property name="layoutDirection">
        <enum>Qt::LeftToRight</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">/* 设置QCheckBox的样式 */
QCheckBox {
    font: bold 15px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    spacing: 5px; /* 设置文本与复选框之间的距离 */
}

/* 设置未选中状态的复选框样式 */
QCheckBox::indicator {
    width: 20px; /* 设置复选框的宽度 */
    height: 20px; /* 设置复选框的高度 */
    border: 2px solid #ccc; /* 设置复选框的边框样式和颜色 */
    border-radius: 5px; /* 设置复选框的圆角 */
}

/* 设置选中状态的复选框样式 */
QCheckBox::indicator:checked {
    background-color: #8fbc8f; /* 设置选中状态的复选框背景颜色 */
    border: 2px solid #3d8b37; /* 设置选中状态的复选框边框样式和颜色 */
}

/* 鼠标悬停时的复选框样式 */
QCheckBox::indicator:hover {
    border: 2px solid #999; /* 设置鼠标悬停时的复选框边框样式和颜色 */
}

/* 禁用状态的复选框样式 */
QCheckBox::indicator:disabled {
    background-color: #f5f5f5; /* 设置禁用状态的复选框背景颜色 */
    border: 2px solid #ccc; /* 设置禁用状态的复选框边框样式和颜色 */
}

/* 设置复选框文本的对齐方式 */
QCheckBox::indicator::unchecked, QCheckBox::indicator::checked {
    subcontrol-position: center left; /* 设置文本在复选框左侧居中 */
    padding-left: 25px; /* 设置文本与复选框之间的距离 */
}

/* 优化选中状态的复选框样式在绿色背景下的可见性 */
QCheckBox::indicator:checked {
    background-color: #3d8b37; /* 修改选中状态的复选框背景颜色为更显眼的绿色 */
    border: 2px solid #3d8b37; /* 保持选中状态的复选框边框颜色与背景色一致 */
}
</string>
       </property>
       <property name="text">
        <string>显示帧数</string>
       </property>
      </widget>
     </item>
     <item row="6" column="0">
      <widget class="QPushButton" name="puased">
       <property name="styleSheet">
        <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #6b8e23; /* 橄榄土绿背景色 */
    border: 2px solid #4c6618; /* 橄榄土绿边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
       </property>
       <property name="text">
        <string>暂停</string>
       </property>
      </widget>
     </item>
     <item row="3" column="0">
      <widget class="QCheckBox" name="chkInfTime">
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
         <italic>false</italic>
         <bold>true</bold>
        </font>
       </property>
       <property name="layoutDirection">
        <enum>Qt::LeftToRight</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">/* 设置QCheckBox的样式 */
QCheckBox {
    font: bold 15px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    spacing: 5px; /* 设置文本与复选框之间的距离 */
}

/* 设置未选中状态的复选框样式 */
QCheckBox::indicator {
    width: 20px; /* 设置复选框的宽度 */
    height: 20px; /* 设置复选框的高度 */
    border: 2px solid #ccc; /* 设置复选框的边框样式和颜色 */
    border-radius: 5px; /* 设置复选框的圆角 */
}

/* 设置选中状态的复选框样式 */
QCheckBox::indicator:checked {
    background-color: #8fbc8f; /* 设置选中状态的复选框背景颜色 */
    border: 2px solid #3d8b37; /* 设置选中状态的复选框边框样式和颜色 */
}

/* 鼠标悬停时的复选框样式 */
QCheckBox::indicator:hover {
    border: 2px solid #999; /* 设置鼠标悬停时的复选框边框样式和颜色 */
}

/* 禁用状态的复选框样式 */
QCheckBox::indicator:disabled {
    background-color: #f5f5f5; /* 设置禁用状态的复选框背景颜色 */
    border: 2px solid #ccc; /* 设置禁用状态的复选框边框样式和颜色 */
}

/* 设置复选框文本的对齐方式 */
QCheckBox::indicator::unchecked, QCheckBox::indicator::checked {
    subcontrol-position: center left; /* 设置文本在复选框左侧居中 */
    padding-left: 25px; /* 设置文本与复选框之间的距离 */
}

/* 优化选中状态的复选框样式在绿色背景下的可见性 */
QCheckBox::indicator:checked {
    background-color: #3d8b37; /* 修改选中状态的复选框背景颜色为更显眼的绿色 */
    border: 2px solid #3d8b37; /* 保持选中状态的复选框边框颜色与背景色一致 */
}
</string>
       </property>
       <property name="text">
        <string>检测时间</string>
       </property>
      </widget>
     </item>
     <item row="5" column="0">
      <widget class="QPushButton" name="load_record_gif">
       <property name="styleSheet">
        <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #4682b4; /* 钢蓝色背景色 */
    border: 2px solid #2c5680; /* 钢蓝色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
       </property>
       <property name="text">
        <string>加载录制框</string>
       </property>
      </widget>
     </item>
     <item row="0" column="0">
      <widget class="QPushButton" name="loadclass">
       <property name="styleSheet">
        <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #4682b4; /* 钢蓝色背景色 */
    border: 2px solid #2c5680; /* 钢蓝色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
       </property>
       <property name="text">
        <string>加载类别源</string>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QPushButton" name="streamloader">
       <property name="styleSheet">
        <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #4682b4; /* 钢蓝色背景色 */
    border: 2px solid #2c5680; /* 钢蓝色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
       </property>
       <property name="text">
        <string>加载检测源</string>
       </property>
      </widget>
     </item>
     <item row="2" column="1">
      <widget class="QCheckBox" name="chkGPU">
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
         <italic>false</italic>
         <bold>true</bold>
        </font>
       </property>
       <property name="layoutDirection">
        <enum>Qt::LeftToRight</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">/* 设置QCheckBox的样式 */
QCheckBox {
    font: bold 15px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    spacing: 5px; /* 设置文本与复选框之间的距离 */
}

/* 设置未选中状态的复选框样式 */
QCheckBox::indicator {
    width: 20px; /* 设置复选框的宽度 */
    height: 20px; /* 设置复选框的高度 */
    border: 2px solid #ccc; /* 设置复选框的边框样式和颜色 */
    border-radius: 5px; /* 设置复选框的圆角 */
}

/* 设置选中状态的复选框样式 */
QCheckBox::indicator:checked {
    background-color: #8fbc8f; /* 设置选中状态的复选框背景颜色 */
    border: 2px solid #3d8b37; /* 设置选中状态的复选框边框样式和颜色 */
}

/* 鼠标悬停时的复选框样式 */
QCheckBox::indicator:hover {
    border: 2px solid #999; /* 设置鼠标悬停时的复选框边框样式和颜色 */
}

/* 禁用状态的复选框样式 */
QCheckBox::indicator:disabled {
    background-color: #f5f5f5; /* 设置禁用状态的复选框背景颜色 */
    border: 2px solid #ccc; /* 设置禁用状态的复选框边框样式和颜色 */
}

/* 设置复选框文本的对齐方式 */
QCheckBox::indicator::unchecked, QCheckBox::indicator::checked {
    subcontrol-position: center left; /* 设置文本在复选框左侧居中 */
    padding-left: 25px; /* 设置文本与复选框之间的距离 */
}

/* 优化选中状态的复选框样式在绿色背景下的可见性 */
QCheckBox::indicator:checked {
    background-color: #3d8b37; /* 修改选中状态的复选框背景颜色为更显眼的绿色 */
    border: 2px solid #3d8b37; /* 保持选中状态的复选框边框颜色与背景色一致 */
}
</string>
       </property>
       <property name="text">
        <string>GPU加速</string>
       </property>
       <property name="checked">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item row="6" column="1">
      <widget class="QPushButton" name="clear_all">
       <property name="styleSheet">
        <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #6b8e23; /* 橄榄土绿背景色 */
    border: 2px solid #4c6618; /* 橄榄土绿边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
       </property>
       <property name="text">
        <string>清除检测</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="QPushButton" name="loadmodel">
       <property name="styleSheet">
        <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #4682b4; /* 钢蓝色背景色 */
    border: 2px solid #2c5680; /* 钢蓝色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
       </property>
       <property name="text">
        <string>加载模型源</string>
       </property>
      </widget>
     </item>
     <item row="2" column="0">
      <widget class="QCheckBox" name="chkSave">
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
         <italic>false</italic>
         <bold>true</bold>
        </font>
       </property>
       <property name="layoutDirection">
        <enum>Qt::LeftToRight</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">/* 设置QCheckBox的样式 */
QCheckBox {
    font: bold 15px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    spacing: 5px; /* 设置文本与复选框之间的距离 */
}

/* 设置未选中状态的复选框样式 */
QCheckBox::indicator {
    width: 20px; /* 设置复选框的宽度 */
    height: 20px; /* 设置复选框的高度 */
    border: 2px solid #ccc; /* 设置复选框的边框样式和颜色 */
    border-radius: 5px; /* 设置复选框的圆角 */
}

/* 设置选中状态的复选框样式 */
QCheckBox::indicator:checked {
    background-color: #8fbc8f; /* 设置选中状态的复选框背景颜色 */
    border: 2px solid #3d8b37; /* 设置选中状态的复选框边框样式和颜色 */
}

/* 鼠标悬停时的复选框样式 */
QCheckBox::indicator:hover {
    border: 2px solid #999; /* 设置鼠标悬停时的复选框边框样式和颜色 */
}

/* 禁用状态的复选框样式 */
QCheckBox::indicator:disabled {
    background-color: #f5f5f5; /* 设置禁用状态的复选框背景颜色 */
    border: 2px solid #ccc; /* 设置禁用状态的复选框边框样式和颜色 */
}

/* 设置复选框文本的对齐方式 */
QCheckBox::indicator::unchecked, QCheckBox::indicator::checked {
    subcontrol-position: center left; /* 设置文本在复选框左侧居中 */
    padding-left: 25px; /* 设置文本与复选框之间的距离 */
}

/* 优化选中状态的复选框样式在绿色背景下的可见性 */
QCheckBox::indicator:checked {
    background-color: #3d8b37; /* 修改选中状态的复选框背景颜色为更显眼的绿色 */
    border: 2px solid #3d8b37; /* 保持选中状态的复选框边框颜色与背景色一致 */
}
</string>
       </property>
       <property name="text">
        <string>结果保存</string>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="QPushButton" name="load_camera">
       <property name="styleSheet">
        <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #4682b4; /* 钢蓝色背景色 */
    border: 2px solid #2c5680; /* 钢蓝色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
       </property>
       <property name="text">
        <string>加载摄像头</string>
       </property>
      </widget>
     </item>
     <item row="4" column="0">
      <widget class="QLabel" name="Stop_bit_2">
       <property name="font">
        <font>
         <pointsize>11</pointsize>
        </font>
       </property>
       <property name="text">
        <string>INF_SIZE</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
     </item>
     <item row="4" column="1">
      <widget class="QComboBox" name="inf_sizeCb">
       <property name="styleSheet">
        <string notr="true">/* 设置QComboBox的样式 */
QComboBox {
    font: bold 10px; /* 设置字体样式和大小为10px */
    color: #333; /* 设置文本颜色 */
    border: 2px solid #8fbc8f; /* 设置边框样式和颜色 */
    border-radius: 5px; /* 设置圆角 */
    padding: 5px; /* 设置内边距 */
    background-color: #f5f5f5; /* 设置背景颜色 */
}

/* 设置下拉箭头样式 */
QComboBox::drop-down {
    width: 20px; /* 设置下拉箭头的宽度 */
    height: 20px; /* 设置下拉箭头的高度 */
}

QComboBox::down-arrow {
    image: url(:/icons/down_arrow.png); /* 使用箭头图标，注意替换为正确的路径 */
}

/* 设置下拉列表样式 */
QComboBox QAbstractItemView {
    border: 2px solid #8fbc8f; /* 设置下拉列表的边框样式和颜色 */
    background-color: #f5f5f5; /* 设置下拉列表的背景颜色 */
    selection-background-color: #ffa500; /* 设置选中项的背景颜色（橙色） */
    selection-color: white; /* 设置选中项的文本颜色 */
}

/* 设置下拉列表中的每一项样式 */
QComboBox QAbstractItemView::item {
    height: 25px; /* 设置每一项的高度 */
}

/* 设置选中项样式 */
QComboBox::item:selected {
    background-color: #ffa500; /* 设置选中项的背景颜色（橙色） */
    color: white; /* 设置选中项的文本颜色 */
}
</string>
       </property>
       <item>
        <property name="text">
         <string>640,480</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>640,640</string>
        </property>
       </item>
      </widget>
     </item>
    </layout>
    <zorder>loadmodel</zorder>
    <zorder>loadclass</zorder>
    <zorder>load_camera</zorder>
    <zorder>streamloader</zorder>
    <zorder>clear_all</zorder>
    <zorder>puased</zorder>
    <zorder>load_record</zorder>
    <zorder>load_record_gif</zorder>
    <zorder>chkSave</zorder>
    <zorder>chkGPU</zorder>
    <zorder>chkInfTime</zorder>
    <zorder>chkInfFPS</zorder>
    <zorder>Stop_bit_2</zorder>
    <zorder>inf_sizeCb</zorder>
   </widget>
   <widget class="QGroupBox" name="groupBox">
    <property name="geometry">
     <rect>
      <x>540</x>
      <y>260</y>
      <width>751</width>
      <height>61</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"/>
    </property>
    <layout class="QGridLayout" name="gridLayout_4">
     <item row="0" column="0">
      <widget class="QComboBox" name="cboxUrl">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="editable">
        <bool>true</bool>
       </property>
       <item>
        <property name="text">
         <string>http://hw-m-l.cztv.com/channels/lantian/channel12/720p.m3u8</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>http://vfx.mtime.cn/Video/2021/11/16/mp4/211116131456748178.mp4</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>http://vd3.bdstatic.com/mda-jennyc5ci1ugrxzi/mda-jennyc5ci1ugrxzi.mp4</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>http://80.91.177.102:1935/live/live1/playlist.m3u8</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>https://movie.mcas.jp/mcas/smil:wn1.smil/master.m3u8</string>
        </property>
       </item>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="QPushButton" name="UrlOpenBT">
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #d2691e;
    border: 2px solid #854c00;
    border-radius: 8px;
    color: white;
    font: bold 9px;
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #e68a4e;
}

QPushButton:pressed {
    background-color: #854c00;
}
</string>
       </property>
       <property name="text">
        <string>vlc打开URL</string>
       </property>
      </widget>
     </item>
     <item row="0" column="2">
      <widget class="QPushButton" name="UrlOpenBT_2">
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #d2691e;
    border: 2px solid #854c00;
    border-radius: 8px;
    color: white;
    font: bold 9px;
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #e68a4e;
}

QPushButton:pressed {
    background-color: #854c00;
}
</string>
       </property>
       <property name="text">
        <string>FFmpeg</string>
       </property>
      </widget>
     </item>
    </layout>
   </widget>
   <widget class="VlcWidget" name="playWidget" native="true">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>380</y>
      <width>640</width>
      <height>480</height>
     </rect>
    </property>
    <property name="sizePolicy">
     <sizepolicy hsizetype="Preferred" vsizetype="Expanding">
      <horstretch>0</horstretch>
      <verstretch>0</verstretch>
     </sizepolicy>
    </property>
    <property name="styleSheet">
     <string notr="true">background:transparent;border:2px solid yellow;</string>
    </property>
    <widget class="FFmpegWidget" name="playWidget_2" native="true">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>0</y>
       <width>640</width>
       <height>480</height>
      </rect>
     </property>
     <property name="sizePolicy">
      <sizepolicy hsizetype="Preferred" vsizetype="Expanding">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
    </widget>
   </widget>
   <widget class="QPushButton" name="BT_DATABASE">
    <property name="geometry">
     <rect>
      <x>840</x>
      <y>30</y>
      <width>181</width>
      <height>71</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置按钮的背景色、边框样式、文本颜色、字体等 */
QPushButton {
    background-color: #4CAF50; /* 设置背景颜色 */
    border: 2px solid #008CBA; /* 设置边框样式 */
    border-radius: 8px; /* 设置边框圆角 */
    color: white; /* 设置按钮文本颜色 */
    font: bold 14px; /* 设置按钮字体样式 */
    padding: 8px 16px; /* 设置按钮内边距 */
}

/* 设置按钮的鼠标悬停状态 */
QPushButton:hover {
    background-color: #45a049; /* 设置鼠标悬停时的背景颜色 */
}

/* 设置按钮的按下状态 */
QPushButton:pressed {
    background-color: #4CAF50; /* 设置按钮按下时的背景颜色 */
    border: 2px solid #005DA8; /* 设置按下时的边框样式 */
}

/* 设置默认按钮的样式 */
QPushButton:default {
    border: none; /* 取消默认边框 */
}
</string>
    </property>
    <property name="text">
     <string>数据库</string>
    </property>
   </widget>
   <widget class="QPushButton" name="openBt">
    <property name="geometry">
     <rect>
      <x>840</x>
      <y>220</y>
      <width>179</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #ffa07a; /* 亮珊瑚色背景色 */
    border: 2px solid #cc7267; /* 亮珊瑚色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
    </property>
    <property name="text">
     <string>打开串口</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="chkLineSend">
    <property name="geometry">
     <rect>
      <x>541</x>
      <y>85</y>
      <width>98</width>
      <height>24</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置共同的复选框样式 */
QCheckBox {
    font: bold 11px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    spacing: 5px; /* 设置文本与复选框之间的距离 */
}

/* 设置未选中状态的复选框样式 */
QCheckBox::indicator {
    width: 20px; /* 设置复选框的宽度 */
    height: 20px; /* 设置复选框的高度 */
    border: 2px solid #b0c4de; /* 设置复选框的边框样式和颜色 */
    border-radius: 8px; /* 设置复选框的圆角 */
}

/* 设置选中状态的复选框样式 */
QCheckBox::indicator:checked {
    background-color: #ffa500; /* 设置选中状态的复选框背景颜色（橙色）*/
    border: 2px solid #ffa500; /* 设置选中状态的复选框边框样式和颜色 */
}

/* 鼠标悬停时的复选框样式 */
QCheckBox::indicator:hover {
    border: 2px solid #8fbc8f; /* 设置鼠标悬停时的复选框边框样式和颜色（淡绿色）*/
}

/* 禁用状态的复选框样式 */
QCheckBox::indicator:disabled {
    background-color: #f5f5f5; /* 设置禁用状态的复选框背景颜色 */
    border: 2px solid #c0c0c0; /* 设置禁用状态的复选框边框样式和颜色 */
}

/* 设置复选框文本的对齐方式 */
QCheckBox::indicator::unchecked, QCheckBox::indicator::checked {
    subcontrol-position: center left; /* 设置文本在复选框左侧居中 */
    padding-left: 25px; /* 设置文本与复选框之间的距离 */
}
</string>
    </property>
    <property name="text">
     <string>发送新行</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="chkHexDisplay">
    <property name="geometry">
     <rect>
      <x>541</x>
      <y>149</y>
      <width>99</width>
      <height>24</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置共同的复选框样式 */
QCheckBox {
    font: bold 11px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    spacing: 5px; /* 设置文本与复选框之间的距离 */
}

/* 设置未选中状态的复选框样式 */
QCheckBox::indicator {
    width: 20px; /* 设置复选框的宽度 */
    height: 20px; /* 设置复选框的高度 */
    border: 2px solid #b0c4de; /* 设置复选框的边框样式和颜色 */
    border-radius: 8px; /* 设置复选框的圆角 */
}

/* 设置选中状态的复选框样式 */
QCheckBox::indicator:checked {
    background-color: #ffa500; /* 设置选中状态的复选框背景颜色（橙色）*/
    border: 2px solid #ffa500; /* 设置选中状态的复选框边框样式和颜色 */
}

/* 鼠标悬停时的复选框样式 */
QCheckBox::indicator:hover {
    border: 2px solid #8fbc8f; /* 设置鼠标悬停时的复选框边框样式和颜色（淡绿色）*/
}

/* 禁用状态的复选框样式 */
QCheckBox::indicator:disabled {
    background-color: #f5f5f5; /* 设置禁用状态的复选框背景颜色 */
    border: 2px solid #c0c0c0; /* 设置禁用状态的复选框边框样式和颜色 */
}

/* 设置复选框文本的对齐方式 */
QCheckBox::indicator::unchecked, QCheckBox::indicator::checked {
    subcontrol-position: center left; /* 设置文本在复选框左侧居中 */
    padding-left: 25px; /* 设置文本与复选框之间的距离 */
}
</string>
    </property>
    <property name="text">
     <string>HEX接收</string>
    </property>
   </widget>
   <widget class="QPushButton" name="sendBt">
    <property name="geometry">
     <rect>
      <x>540</x>
      <y>230</y>
      <width>101</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #ffa07a; /* 亮珊瑚色背景色 */
    border: 2px solid #cc7267; /* 亮珊瑚色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
    </property>
    <property name="text">
     <string>点击发送</string>
    </property>
   </widget>
   <widget class="QPushButton" name="clearBt">
    <property name="geometry">
     <rect>
      <x>541</x>
      <y>190</y>
      <width>101</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #ffa07a; /* 亮珊瑚色背景色 */
    border: 2px solid #cc7267; /* 亮珊瑚色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
    </property>
    <property name="text">
     <string>清楚接收</string>
    </property>
   </widget>
   <widget class="QPushButton" name="btnSerialCheck">
    <property name="geometry">
     <rect>
      <x>840</x>
      <y>120</y>
      <width>179</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #ffa07a; /* 亮珊瑚色背景色 */
    border: 2px solid #cc7267; /* 亮珊瑚色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
    </property>
    <property name="text">
     <string>检测串口</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="chkTimRecv">
    <property name="geometry">
     <rect>
      <x>541</x>
      <y>53</y>
      <width>109</width>
      <height>24</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置共同的复选框样式 */
QCheckBox {
    font: bold 11px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    spacing: 5px; /* 设置文本与复选框之间的距离 */
}

/* 设置未选中状态的复选框样式 */
QCheckBox::indicator {
    width: 20px; /* 设置复选框的宽度 */
    height: 20px; /* 设置复选框的高度 */
    border: 2px solid #b0c4de; /* 设置复选框的边框样式和颜色 */
    border-radius: 8px; /* 设置复选框的圆角 */
}

/* 设置选中状态的复选框样式 */
QCheckBox::indicator:checked {
    background-color: #ffa500; /* 设置选中状态的复选框背景颜色（橙色）*/
    border: 2px solid #ffa500; /* 设置选中状态的复选框边框样式和颜色 */
}

/* 鼠标悬停时的复选框样式 */
QCheckBox::indicator:hover {
    border: 2px solid #8fbc8f; /* 设置鼠标悬停时的复选框边框样式和颜色（淡绿色）*/
}

/* 禁用状态的复选框样式 */
QCheckBox::indicator:disabled {
    background-color: #f5f5f5; /* 设置禁用状态的复选框背景颜色 */
    border: 2px solid #c0c0c0; /* 设置禁用状态的复选框边框样式和颜色 */
}

/* 设置复选框文本的对齐方式 */
QCheckBox::indicator::unchecked, QCheckBox::indicator::checked {
    subcontrol-position: center left; /* 设置文本在复选框左侧居中 */
    padding-left: 25px; /* 设置文本与复选框之间的距离 */
}
</string>
    </property>
    <property name="text">
     <string>开启时间戳</string>
    </property>
   </widget>
   <widget class="QPushButton" name="closeBt">
    <property name="geometry">
     <rect>
      <x>840</x>
      <y>170</y>
      <width>179</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置按钮的共同样式 */
QPushButton {
    background-color: #ffa07a; /* 亮珊瑚色背景色 */
    border: 2px solid #cc7267; /* 亮珊瑚色边框色 */
    border-radius: 8px;
    color: white;
    font: bold 11px; /* 将字体大小调整为10px */
    padding: 8px 16px;
}

QPushButton:hover {
    background-color: #ffc04d; /* 鼠标悬停时的背景色 */
}

QPushButton:pressed {
    background-color: #b27300; /* 按钮按下时的背景色 */
}
</string>
    </property>
    <property name="text">
     <string>关闭串口</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="chkHexSend">
    <property name="geometry">
     <rect>
      <x>541</x>
      <y>117</y>
      <width>99</width>
      <height>24</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置共同的复选框样式 */
QCheckBox {
    font: bold 11px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    spacing: 5px; /* 设置文本与复选框之间的距离 */
}

/* 设置未选中状态的复选框样式 */
QCheckBox::indicator {
    width: 20px; /* 设置复选框的宽度 */
    height: 20px; /* 设置复选框的高度 */
    border: 2px solid #b0c4de; /* 设置复选框的边框样式和颜色 */
    border-radius: 8px; /* 设置复选框的圆角 */
}

/* 设置选中状态的复选框样式 */
QCheckBox::indicator:checked {
    background-color: #ffa500; /* 设置选中状态的复选框背景颜色（橙色）*/
    border: 2px solid #ffa500; /* 设置选中状态的复选框边框样式和颜色 */
}

/* 鼠标悬停时的复选框样式 */
QCheckBox::indicator:hover {
    border: 2px solid #8fbc8f; /* 设置鼠标悬停时的复选框边框样式和颜色（淡绿色）*/
}

/* 禁用状态的复选框样式 */
QCheckBox::indicator:disabled {
    background-color: #f5f5f5; /* 设置禁用状态的复选框背景颜色 */
    border: 2px solid #c0c0c0; /* 设置禁用状态的复选框边框样式和颜色 */
}

/* 设置复选框文本的对齐方式 */
QCheckBox::indicator::unchecked, QCheckBox::indicator::checked {
    subcontrol-position: center left; /* 设置文本在复选框左侧居中 */
    padding-left: 25px; /* 设置文本与复选框之间的距离 */
}
</string>
    </property>
    <property name="text">
     <string>HEX发送</string>
    </property>
   </widget>
   <widget class="QGroupBox" name="serialportgroup">
    <property name="geometry">
     <rect>
      <x>670</x>
      <y>50</y>
      <width>161</width>
      <height>191</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"/>
    </property>
    <layout class="QFormLayout" name="formLayout">
     <item row="0" column="0">
      <widget class="QLabel" name="Port">
       <property name="font">
        <font>
         <pointsize>11</pointsize>
        </font>
       </property>
       <property name="text">
        <string>端   口</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="QComboBox" name="serailCb">
       <property name="styleSheet">
        <string notr="true">/* 设置QComboBox的样式 */
QComboBox {
    font: bold 10px; /* 设置字体样式和大小为10px */
    color: #333; /* 设置文本颜色 */
    border: 2px solid #b0c4de; /* 设置边框样式和颜色 */
    border-radius: 8px; /* 设置圆角 */
    padding: 5px; /* 设置内边距 */
    background-color: #f5f5f5; /* 设置背景颜色 */
}

/* 设置下拉箭头样式 */
QComboBox::drop-down {
    width: 20px; /* 设置下拉箭头的宽度 */
    height: 20px; /* 设置下拉箭头的高度 */
}

QComboBox::down-arrow {
    image: url(&quot;:/icons/down_arrow.png&quot;); /* 使用标准箭头图标，注意替换为正确的路径 */
}

/* 设置下拉列表样式 */
QComboBox QAbstractItemView {
    border: 2px solid #b0c4de; /* 设置下拉列表的边框样式和颜色 */
    background-color: #f5f5f5; /* 设置下拉列表的背景颜色 */
}

/* 设置选中项样式 */
QComboBox::item:selected {
    background-color: #ffa500; /* 设置选中项的背景颜色（橙色） */
    color: white; /* 设置选中项的文本颜色 */
}
</string>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QLabel" name="Baud_rate">
       <property name="font">
        <font>
         <pointsize>11</pointsize>
        </font>
       </property>
       <property name="text">
        <string>波特率</string>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="QComboBox" name="baundrateCb">
       <property name="styleSheet">
        <string notr="true">/* 设置QComboBox的样式 */
QComboBox {
    font: bold 10px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    border: 2px solid #b0c4de; /* 设置边框样式和颜色 */
    border-radius: 8px; /* 设置圆角 */
    padding: 5px; /* 设置内边距 */
    background-color: #f5f5f5; /* 设置背景颜色 */
}

/* 设置下拉箭头样式 */
QComboBox::drop-down {
    width: 20px; /* 设置下拉箭头的宽度 */
    height: 20px; /* 设置下拉箭头的高度 */
}

QComboBox::down-arrow {
    image: url(:/arrow_down.png); /* 设置下拉箭头图像（替换为您的图像路径） */
}

/* 设置下拉列表样式 */
QComboBox QAbstractItemView {
    border: 2px solid #b0c4de; /* 设置下拉列表的边框样式和颜色 */
    background-color: #f5f5f5; /* 设置下拉列表的背景颜色 */
}

/* 设置选中项样式 */
QComboBox::item:selected {
    background-color: #ffa500; /* 设置选中项的背景颜色（橙色） */
    color: white; /* 设置选中项的文本颜色 */
}
</string>
       </property>
       <property name="currentText">
        <string>57600</string>
       </property>
       <property name="currentIndex">
        <number>6</number>
       </property>
       <item>
        <property name="text">
         <string>1200</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>2400</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>4800</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>9600</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>19200</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>38400</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>57600</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>115200</string>
        </property>
       </item>
      </widget>
     </item>
     <item row="2" column="0">
      <widget class="QLabel" name="Check_bit">
       <property name="font">
        <font>
         <pointsize>11</pointsize>
        </font>
       </property>
       <property name="text">
        <string>检验位</string>
       </property>
      </widget>
     </item>
     <item row="2" column="1">
      <widget class="QComboBox" name="checkbitCb">
       <property name="styleSheet">
        <string notr="true">/* 设置QComboBox的样式 */
QComboBox {
    font: bold 10px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    border: 2px solid #b0c4de; /* 设置边框样式和颜色 */
    border-radius: 8px; /* 设置圆角 */
    padding: 5px; /* 设置内边距 */
    background-color: #f5f5f5; /* 设置背景颜色 */
}

/* 设置下拉箭头样式 */
QComboBox::drop-down {
    width: 20px; /* 设置下拉箭头的宽度 */
    height: 20px; /* 设置下拉箭头的高度 */
}

QComboBox::down-arrow {
    image: url(:/arrow_down.png); /* 设置下拉箭头图像（替换为您的图像路径） */
}

/* 设置下拉列表样式 */
QComboBox QAbstractItemView {
    border: 2px solid #b0c4de; /* 设置下拉列表的边框样式和颜色 */
    background-color: #f5f5f5; /* 设置下拉列表的背景颜色 */
}

/* 设置选中项样式 */
QComboBox::item:selected {
    background-color: #ffa500; /* 设置选中项的背景颜色（橙色） */
    color: white; /* 设置选中项的文本颜色 */
}
</string>
       </property>
       <item>
        <property name="text">
         <string>无校验</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>奇校验</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>偶校验</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>space校验</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>mark校验</string>
        </property>
       </item>
      </widget>
     </item>
     <item row="3" column="0">
      <widget class="QLabel" name="Data_bit">
       <property name="font">
        <font>
         <pointsize>11</pointsize>
        </font>
       </property>
       <property name="text">
        <string>数据位</string>
       </property>
      </widget>
     </item>
     <item row="3" column="1">
      <widget class="QComboBox" name="databitCb">
       <property name="styleSheet">
        <string notr="true">/* 设置QComboBox的样式 */
QComboBox {
    font: bold 10px; /* 设置字体样式和大小 */
    color: #333; /* 设置文本颜色 */
    border: 2px solid #b0c4de; /* 设置边框样式和颜色 */
    border-radius: 8px; /* 设置圆角 */
    padding: 5px; /* 设置内边距 */
    background-color: #f5f5f5; /* 设置背景颜色 */
}

/* 设置下拉箭头样式 */
QComboBox::drop-down {
    width: 20px; /* 设置下拉箭头的宽度 */
    height: 20px; /* 设置下拉箭头的高度 */
}

QComboBox::down-arrow {
    image: url(:/arrow_down.png); /* 设置下拉箭头图像（替换为您的图像路径） */
}

/* 设置下拉列表样式 */
QComboBox QAbstractItemView {
    border: 2px solid #b0c4de; /* 设置下拉列表的边框样式和颜色 */
    background-color: #f5f5f5; /* 设置下拉列表的背景颜色 */
}

/* 设置选中项样式 */
QComboBox::item:selected {
    background-color: #ffa500; /* 设置选中项的背景颜色（橙色） */
    color: white; /* 设置选中项的文本颜色 */
}
</string>
       </property>
       <property name="currentIndex">
        <number>3</number>
       </property>
       <item>
        <property name="text">
         <string>5</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>6</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>7</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>8</string>
        </property>
       </item>
      </widget>
     </item>
     <item row="4" column="0">
      <widget class="QLabel" name="Stop_bit">
       <property name="font">
        <font>
         <pointsize>11</pointsize>
        </font>
       </property>
       <property name="text">
        <string>停止位</string>
       </property>
      </widget>
     </item>
     <item row="4" column="1">
      <widget class="QComboBox" name="stopbitCb">
       <property name="styleSheet">
        <string notr="true">/* 设置QComboBox的样式 */
QComboBox {
    font: bold 10px; /* 设置字体样式和大小为10px */
    color: #333; /* 设置文本颜色 */
    border: 2px solid #8fbc8f; /* 设置边框样式和颜色 */
    border-radius: 5px; /* 设置圆角 */
    padding: 5px; /* 设置内边距 */
    background-color: #f5f5f5; /* 设置背景颜色 */
}

/* 设置下拉箭头样式 */
QComboBox::drop-down {
    width: 20px; /* 设置下拉箭头的宽度 */
    height: 20px; /* 设置下拉箭头的高度 */
}

QComboBox::down-arrow {
    image: url(:/icons/down_arrow.png); /* 使用箭头图标，注意替换为正确的路径 */
}

/* 设置下拉列表样式 */
QComboBox QAbstractItemView {
    border: 2px solid #8fbc8f; /* 设置下拉列表的边框样式和颜色 */
    background-color: #f5f5f5; /* 设置下拉列表的背景颜色 */
    selection-background-color: #ffa500; /* 设置选中项的背景颜色（橙色） */
    selection-color: white; /* 设置选中项的文本颜色 */
}

/* 设置下拉列表中的每一项样式 */
QComboBox QAbstractItemView::item {
    height: 25px; /* 设置每一项的高度 */
}

/* 设置选中项样式 */
QComboBox::item:selected {
    background-color: #ffa500; /* 设置选中项的背景颜色（橙色） */
    color: white; /* 设置选中项的文本颜色 */
}
</string>
       </property>
       <item>
        <property name="text">
         <string>1</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>1.5</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>2</string>
        </property>
       </item>
      </widget>
     </item>
    </layout>
   </widget>
   <widget class="QPushButton" name="BT_NETW">
    <property name="geometry">
     <rect>
      <x>550</x>
      <y>0</y>
      <width>231</width>
      <height>41</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">/* 设置按钮的背景色、边框样式、文本颜色、字体等 */
QPushButton {
    background-color: #4CAF50; /* 设置背景颜色 */
    border: 2px solid #008CBA; /* 设置边框样式 */
    border-radius: 8px; /* 设置边框圆角 */
    color: white; /* 设置按钮文本颜色 */
    font: bold 14px; /* 设置按钮字体样式 */
    padding: 8px 16px; /* 设置按钮内边距 */
}

/* 设置按钮的鼠标悬停状态 */
QPushButton:hover {
    background-color: #45a049; /* 设置鼠标悬停时的背景颜色 */
}

/* 设置按钮的按下状态 */
QPushButton:pressed {
    background-color: #4CAF50; /* 设置按钮按下时的背景颜色 */
    border: 2px solid #005DA8; /* 设置按下时的边框样式 */
}

/* 设置默认按钮的样式 */
QPushButton:default {
    border: none; /* 取消默认边框 */
}
</string>
    </property>
    <property name="text">
     <string>打开网络调试</string>
    </property>
   </widget>
   <zorder>recvEdit</zorder>
   <zorder>serialportgroup</zorder>
   <zorder>label_origin</zorder>
   <zorder>sendEdit</zorder>
   <zorder>label_inference</zorder>
   <zorder>origin</zorder>
   <zorder>inference</zorder>
   <zorder>playWidget</zorder>
   <zorder>BT_DATABASE</zorder>
   <zorder>groupBox</zorder>
   <zorder>groupBox</zorder>
   <zorder>openBt</zorder>
   <zorder>chkLineSend</zorder>
   <zorder>chkHexDisplay</zorder>
   <zorder>sendBt</zorder>
   <zorder>clearBt</zorder>
   <zorder>btnSerialCheck</zorder>
   <zorder>chkTimRecv</zorder>
   <zorder>closeBt</zorder>
   <zorder>chkHexSend</zorder>
   <zorder>BT_NETW</zorder>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1300</width>
     <height>21</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <customwidgets>
  <customwidget>
   <class>FFmpegWidget</class>
   <extends>QWidget</extends>
   <header>ffmpeg.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>VlcWidget</class>
   <extends>QWidget</extends>
   <header>vlc.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
